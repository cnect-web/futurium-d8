# .gitlab-ci.yml
# Shell runner on AWS EC2 Instance.
stages:
  - test
  - package
  - release
  - release_package
  - deploy

PHPCS:
  stage: test
  script:
    - docker run --user 1000:1000 --name php_cs --rm -i -v $(pwd):/var/www/html horaciolopesqq/phpnode composer install
    - docker run --user 1000:1000 --name php_cs --rm -i -v $(pwd):/var/www/html horaciolopesqq/phpnode ./bin/robo qa -z cs
  allow_failure: true
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "refactor"
  tags:
    - shell

Behat:
  stage: test
  script:
    - cp config.yml.dist config.yml
    - bash install --force
    - docker exec -u 1000 php ./bin/robo qa -z behat
  only:
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "refactor"
  after_script:
    - chmod -R 0777 .
  tags:
    - shell

CreateArtifact:
  stage: package
  script:
    - cp config.yml.dist config.yml
    - docker run --user 1000:1000 --name php_cs --rm -i -v $(pwd):/var/www/html horaciolopesqq/phpnode composer install --no-dev
    - >
      docker run --user 1000:1000 --name php_cs --rm -i -v $(pwd):/var/www/html horaciolopesqq/phpnode ./bin/robo ti -o "theme.path: web/themes/contrib/blellow"
    - docker run --user 1000:1000 --name php_cs --rm -i -v $(pwd):/var/www/html horaciolopesqq/phpnode ./bin/robo rp ${CI_PROJECT_NAME}-${CI_BUILD_TAG}
  after_script:
    - chmod -R 0777 .
  artifacts:
    paths:
    - ${CI_PROJECT_NAME}-${CI_BUILD_TAG}.zip
  only:
    - tags
  tags:
    - shell

CreateRelease:
  stage: release
  image: python:3
  script:
    - pip3 install gitlab-release
    - gitlab-release --link-artifact *.zip
  artifacts:
    paths:
      - ./*.zip
  only:
    - tags
  tags:
    - docker

UploadToS3:
  stage: release_package
  script:
    - >
      RELEASE=$(curl -Ls -H "PRIVATE-TOKEN: $PRIVATE_TOKEN" $CI_API_V4_URL/projects/$CI_PROJECT_ID/releases | jq -r ".[0].tag_name");
      ARTIFACT_URL=$(curl -Ls -H "PRIVATE-TOKEN: $PRIVATE_TOKEN" $CI_API_V4_URL/projects/$CI_PROJECT_ID/releases | jq -r ".[0].description" | cut -d "(" -f2 | cut -d ")" -f1;
      curl -Ls -H "PRIVATE-TOKEN: $PRIVATE_TOKEN" $ARTIFACT_URL --output /tmp/${CI_PROJECT_NAME}-${CI_BUILD_TAG}.zip;
      aws s3 cp “/tmp/${CI_PROJECT_NAME}-${CI_BUILD_TAG}.zip” s3://$S3_BUCKET_NAME/;
  only:
    - tags
  dependencies:
    - CreateRelease
  tags:
    - shell

DeployToStage:
  stage: deploy
  script:
    - >
      aws elasticbeanstalk create-application-version \
      --application-name="$APPLICATION_NAME"
      --version-label="${CI_BUILD_TAG}"
      --source-bundle="{\"S3Bucket\": \"$S3_BUCKET_NAME\",\"S3Key\": \"${CI_PROJECT_NAME}-${CI_BUILD_TAG}.zip\"}"
  dependencies:
    - UploadToS3
  only:
    - tags
  tags:
    - shell