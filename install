#!/usr/bin/env bash
#Usage:
# ./install [FORCE DRUPAL INSTALL] [REBUILD CONTAINERS]
FORCE=${1:-no}
REBUILD_CONTAINERS=${2:-no}
INSTALLATION_TYPE="bare"

BOLD=$(tput bold)
NORMAL=$(tput sgr0)

if [ -x "$(command -v docker)" ] && [ -x "$(command -v docker-compose)" ]; then
  INSTALLATION_TYPE="docker"
fi

FORCE=$([ "$FORCE" == "no" ] && echo "" || echo "--force")
if [ -f ".env" ] && [[ $FORCE == "--force" ]]; then rm -rf .env ; fi

# Prepare the environment.
if [ $INSTALLATION_TYPE == "docker" ]
then

  echo "Using ${BOLD}Docker Compose${NORMAL}."
  RUNNING_CONTAINERS=$(docker ps -q)
  if [ ! -z "$RUNNING_CONTAINERS" ]
  then
      KILL=$(docker kill $RUNNING_CONTAINERS)
  fi

  USER_ID=$(id -u)
  GROUP_D=$(id -g)
  docker run --user ${USER_ID}:${GROUP_ID} --name php_install --rm -t -v $(pwd):/var/www/html horaciolopesqq/php composer install > /dev/null 2>&1
  docker run --user ${USER_ID}:${GROUP_ID} --name php_install --rm -t -v $(pwd):/var/www/html horaciolopesqq/php ./bin/robo pse --type docker > /dev/null 2>&1
else
  # No docker, install on bare metal.
  echo "Using ${BOLD}Bare install${NORMAL}."
  composer install
  ./bin/robo pse
fi

# Export the vars in .env.
# The .env file should be present in the folder from where this script is invoked.
if [ ! -f ".env" ]; then
  echo "No .env file present. Stopping."
  exit 1
fi

# Load environment vars.
export $(egrep -v '^#' .env | xargs)

# Install.
if [ $INSTALLATION_TYPE == "docker" ]; then
  docker-compose -f docker/docker-compose.yml up -d 2>/dev/null \
  && docker exec -u 1000 php bash -c 'if [[ $ENVIRONMENT == "development" ]]; then composer install; else composer install --no-dev ; fi' \
  && echo "" \
  && docker exec -u ${USER_ID} php ./vendor/bin/robo pic $FORCE
else
  if [ "$ENVIRONMENT" = "development" ]; then
    composer install;
  else
    composer install --no-dev;
  fi
  ./vendor/bin/robo pic $FORCE
fi

