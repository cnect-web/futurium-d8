#!/usr/bin/env bash
#Usage:
# ./install [FORCE INSTALL] [REBUILD CONTAINERS] [DOCKER_PHP_IMAGE]
# Overridable vars.
FORCE=${1:-no}
REBUILD_CONTAINERS=${2:-no}
PHP_IMAGE=${3:-horaciolopesqq/phpnode}
# Defaults.
USER_ID=$(id -u)
GROUP_ID=$(id -g)
BOLD=$(tput bold)
NORMAL=$(tput sgr0)
INSTALLATION_TYPE="bare"

if [ ! -f "config.yml" ]; then
  echo "File config.yml not found."
  exit 1
fi

if [ -x "$(command -v docker)" ] && [ -x "$(command -v docker-compose)" ]; then
  INSTALLATION_TYPE="docker"
fi

FORCE=$([ "$FORCE" == "no" ] && echo "" || echo "--force")
if [ -f ".env" ] && [[ $FORCE == "--force" ]]; then rm -rf .env ; fi

# Prepare the environment.
if [ $INSTALLATION_TYPE == "docker" ]
then
  echo "Using ${BOLD}Docker Compose${NORMAL}."
  RUNNING_CONTAINERS=$(docker ps -q)
  if [ ! -z "$RUNNING_CONTAINERS" ]
  then
    docker kill $RUNNING_CONTAINERS #> /dev/null 2>&1
  fi

  # Generate a temporary php.ini file.
  echo "memory_limit=-1" > php.ini

  # We need robo to set up the environment.
  ( docker run --user ${USER_ID}:${GROUP_ID} \
    --name php_install --rm -i \
    -e HOME="/tmp" \
    -e COMPOSER_HOME="/tmp" \
    -v $(pwd):/var/www/html \
    -v $(pwd)/php.ini:/usr/local/etc/php/conf.d/php_overrides.ini \
    $PHP_IMAGE composer install )

  ( docker run --user ${USER_ID}:${GROUP_ID} \
    --name php_install --rm -i \
    -e HOME="/tmp" \
    -e COMPOSER_HOME="/tmp" \
    -v $(pwd):/var/www/html \
    -v $(pwd)/php.ini:/usr/local/etc/php/conf.d/php_overrides.ini \
    $PHP_IMAGE ./bin/robo pse --type docker )

  # Delete temporary php.ini file.
  rm -rf php.ini

else
  # No docker, install on bare metal.
  echo "Using ${BOLD}Bare install${NORMAL}."
  # Composer install because we need robo.
  composer install
  ./bin/robo pse
fi

# Export the vars in .env.
# The .env file should be present in the folder from where this script is invoked.
if [ ! -f ".env" ]; then
  echo "No .env file present. Stopping."
  exit 1
fi

# Load environment vars.
export $(egrep -v '^#' .env | xargs)
COMMAND=$([ "$ENVIRONMENT" == "development" ] && echo "composer install" || echo "composer install --no-dev")

# Install.
if [ $INSTALLATION_TYPE == "docker" ]; then
  docker run --user ${USER_ID}:${GROUP_ID} --name php_install --rm -it -e HOME="/tmp" -e COMPOSER_HOME="/tmp" -v $(pwd):/var/www/html $PHP_IMAGE $COMMAND \
  && docker-compose -f docker/docker-compose.yml up -d \
  && sleep 10 \
  && docker exec -u ${USER_ID} php bin/robo piu $FORCE
  # Create an alias to open a tty in the php container.
  alias "dshp=docker exec -u 1000 -it php bash"
else
  $COMMAND
  ./vendor/bin/robo piu $FORCE
fi
