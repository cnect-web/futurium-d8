<?php

/**
 * @file
 * Contains fut_paragraphs.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function fut_paragraphs_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the fut_paragraphs module.
    case 'help.page.fut_paragraphs':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Futurium Paragraphs module contains paragraph related configurations.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function fut_paragraphs_theme($existing, $type, $theme, $path) {
  return [
    'fut_paragraph_summary' => [
      'variables' => [
        'summary' => NULL,
        'class' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function fut_paragraphs_theme_suggestions_paragraph_alter(array &$suggestions, array $variables): void {
  /** @var \Drupal\paragraphs\ParagraphInterface $paragraph */
  $paragraph = $variables['elements']['#paragraph'];

  // Create suggestion per type of banner (image or video).
  if ($paragraph->bundle() === 'fut_banner') {
    $media = $paragraph->get('fut_banner_media')
      ->first()
      ->get('entity')
      ->getTarget()
      ->getValue()
    ;
    $suggestions[] = "{$variables['theme_hook_original']}__{$paragraph->bundle()}__{$media->bundle()}";
    $suggestions[] = "{$variables['theme_hook_original']}__{$paragraph->bundle()}__{$variables['elements']['#view_mode']}__{$media->bundle()}";
  }

}
