<?php

/**
 * @file
 * Contains fut_group.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\group\Entity\Group;
use Drupal\paragraphs\Entity\Paragraph;

/**
 * Implements hook_help().
 */
function fut_group_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the fut_group module.
    case 'help.page.fut_group':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Futurium Group module contains group related configurations.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_entity_type_build().
 */
function fut_group_entity_type_build(array &$entity_types) {
  // We set fut_navigation form view mode. So, we can load as a separate form
  // in the custom page.
  $view_modes = ['fut_navigation'];
  $group = $entity_types['group'];

  foreach ($view_modes as $view_mode) {
    $default_handler_class = $group->getHandlerClasses()['form']['add'];
    $group->setFormClass($view_mode, $default_handler_class);
  }
}

/**
 * Implements hook_theme().
 */
function fut_group_theme($existing, $type, $theme, $path) {
  return [
    'group_navigation' => [
      'variables' => [
        'links' => [],
        'class' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_views_data_alter().
 */
function fut_group_views_data_alter(array &$data) {
  $data['groups_field_data']['accessible_groups'] = [
    'title' => t('Accessible Groups'),
    'filter' => [
      'title' => t('Accessible Groups'),
      'help' => t('Filter by group where current user is member.'),
      'field' => 'id',
      'id' => 'fut_group_accessible_groups',
    ],
  ];
}

/**
 * Implements hook_group_insert().
 */
function fut_group_group_insert(Group $group) {
  // Add default about navigation item
  // @see #61
  $paragraph = Paragraph::create([
    'type' => 'fut_functional_navigation_link',
    'fut_predefined_link' => 'about',
  ]);
  $paragraph->save();

  $group->fut_navigation_menu = [
    [
      'target_id' => $paragraph->id(),
      'target_revision_id' => $paragraph->getRevisionId(),
    ]
  ];
  $group->save();
}